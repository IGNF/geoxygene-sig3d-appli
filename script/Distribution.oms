var dirName = Val[String] // Name of the Input directory to process


val folderIn = Val[File] //Input local folder
val resultFolder = Val[File] //Distant folder where results will be saved



//Algorithm parameters
val stepXY = Val[Double] //Sampling according to curvilinear abcissa
val stepZ = Val[Double] //Sampling according to altitude
val maxDist = Val[Double] //Maximal distance to consider buildings
val heightAttribute = Val[String] //Height attribute value to extrude buildings



val explo = ExplorationTask(				
  (folderIn in (workDirectory / "data") withName dirName)
)


//run(File folderOut, File roadsFile, File buildingsFile, double stepXY, double stepZ, double maxDist, String heightAttribute)
val ProfileTask = ScalaTask("val resultFolder=fr.ign.cogit.task.ProfileTask.runDefault(newDir(), folderIn, stepXY, stepZ, maxDist, heightAttribute);") set (
  libraries += workDirectory / "geoxygene-sig3d-appli-1.9-SNAPSHOT-shaded.jar",
  stepXY := 1,
  stepZ := 1,
  maxDist := 500,
  heightAttribute := "HAUTEUR",
  inputs += ( folderIn, dirName, stepXY, stepZ, maxDist, heightAttribute),
  outputs += (dirName, resultFolder)
  
)


val copyHook =  CopyFileHook(resultFolder, workDirectory/ "out/${dirName}")


val env = LocalEnvironment(1)

explo -< (ProfileTask on env hook copyHook)

